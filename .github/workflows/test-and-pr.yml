name: GitFlow CI/CD

on:
  push:
    branches:
      - develop
      - main
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - develop
      - main

  permissions:
    pull-requests: write
    contents: write

jobs:
  # 1️⃣ Job pour exécuter les tests
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  # 2️⃣ Job pour créer une release quand on merge develop -> main
  create-release:
    runs-on: ubuntu-latest
    needs: run-tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: 'v${{ github.run_number }}'
          name: 'Release v${{ github.run_number }}'
          body: 'Nouvelle release déployée depuis develop'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 3️⃣ Job pour créer des Pull Requests automatiques
  create-pull-requests:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH=${{ github.ref }}
          if [[ $BRANCH == refs/heads/feature/* || $BRANCH == refs/heads/bugfix/* ]]; then
            TARGET_BRANCH=develop
          elif [[ $BRANCH == refs/heads/hotfix/* ]]; then
            TARGET_BRANCH=main
          else
            exit 0
          fi

          # Créer la Pull Request 
          gh pr create --base $TARGET_BRANCH --title "Auto PR: $BRANCH" --body "PR automatique générée par GitHub Actions"
